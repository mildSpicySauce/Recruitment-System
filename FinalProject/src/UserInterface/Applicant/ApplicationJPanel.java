/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Applicant;

import Business.Account.ApplicantAccount;
import Business.Applicant.Application;
import Business.EcoSystem;
import Business.Network.Network;
import Business.Role.Role;
import Business.WorkQueue.ApplicationStatus;
import Business.WorkQueue.ApplyRequest;
import Business.WorkQueue.ExamStatus;
import Business.WorkQueue.WorkRequest;
import UserInterface.Manager.TestResultJFrame;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 11638
 */
public class ApplicationJPanel extends javax.swing.JPanel {

    private EcoSystem system;
    private ApplicantAccount account;
    private Role accessRole;
    /**
     * Creates new form CartJPanel
     */
    public ApplicationJPanel(EcoSystem system, ApplicantAccount account, Role accessRole) {
        initComponents();
        this.system = system;
        this.account = account;
        this.accessRole = accessRole;
        populateTable();
        cancelButton.setEnabled(false);
    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) applicationTable.getModel();
        dtm.setRowCount(0);
        
        for (WorkRequest request : account.getWorkQueue().getWorkRequests()) {
            if (request instanceof ApplyRequest) {
                ApplyRequest apply = ((ApplyRequest) request);
                if (!apply.getApplystatus().equals(ApplicationStatus.AD) && !apply.getApplystatus().equals(ApplicationStatus.Reject)) {
                    if (apply.getExamRequest() != null && apply.getExamRequest().getExamStatus().equals(ExamStatus.Finished)) {
                        if (apply.getExamRequest().getScore() >= 60) {
                            apply.setApplicationstatus(ApplicationStatus.ExamPass);
                        } else {
                            apply.setApplicationstatus(ApplicationStatus.ExamFail);
                        }
                    }
                }
                Object[] row = new Object[3];
                row[0] = ((ApplyRequest)apply);
                row[1] = apply.getEnterprise();
                row[2] = apply.getApplystatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        applicationTable = new javax.swing.JTable();
        reviewBtn = new javax.swing.JButton();
        viewExamBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        cancelButton.setBackground(new java.awt.Color(36, 193, 93));
        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelButton.setText("Cancel Application");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Application");

        applicationTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        applicationTable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        applicationTable.setForeground(new java.awt.Color(51, 51, 51));
        applicationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Job", "Company", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        applicationTable.setGridColor(new java.awt.Color(240, 240, 240));
        applicationTable.setRowHeight(40);
        applicationTable.setSelectionBackground(new java.awt.Color(96, 83, 150));
        applicationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applicationTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(applicationTable);

        reviewBtn.setBackground(new java.awt.Color(36, 193, 93));
        reviewBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reviewBtn.setText("Review Company");
        reviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewBtnActionPerformed(evt);
            }
        });

        viewExamBtn.setBackground(new java.awt.Color(36, 193, 93));
        viewExamBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        viewExamBtn.setText("View Exam Info");
        viewExamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewExamBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(reviewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewExamBtn)
                        .addGap(74, 74, 74)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(reviewBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(viewExamBtn))))
                .addGap(125, 125, 125))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, reviewBtn, viewExamBtn});

    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        int selectedRow = applicationTable.getSelectedRow();
        if (selectedRow >= 0 && selectedRow < system.getWorkQ().getWorkRequests().size()) {
            ApplyRequest apply = (ApplyRequest) applicationTable.getValueAt(selectedRow, 0);
            
                system.getWorkQ().deleteRequest(apply);
                system.getWorkQ().getWorkRequests().remove(apply);
            
            
        }
        populateTable();
        cancelButton.setEnabled(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void applicationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationTableMouseClicked
        cancelButton.setEnabled(true);
        int selectedRow = applicationTable.getSelectedRow();
        if (selectedRow >= 0 && selectedRow < system.getWorkQ().getWorkRequests().size()) {
            ApplyRequest apply = (ApplyRequest) applicationTable.getValueAt(selectedRow, 0);
            if(!apply.getApplicationstatus().equals(ApplicationStatus.AD) && !apply.getApplicationstatus().equals(ApplicationStatus.Reject) || system.getWorkQ().existReview(account, apply.getJob().getEnterprise())){
                reviewBtn.setEnabled(false);
            }else{
                reviewBtn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_applicationTableMouseClicked

    private void reviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = applicationTable.getSelectedRow();
        if (selectedRow >= 0 && selectedRow < system.getWorkQ().getWorkRequests().size()) {
            ApplyRequest apply = (ApplyRequest) applicationTable.getValueAt(selectedRow, 0);
            if(apply.getApplicationstatus().equals(ApplicationStatus.AD) || apply.getApplicationstatus().equals(ApplicationStatus.Reject)){
            
            ReviewJFrame jframe = new ReviewJFrame(system, apply.getEnterprise(), account, this);
            
            jframe.setLocationRelativeTo(null);
            jframe.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "You cannot review company before it send AD or Reject.");
            }
        }
    }//GEN-LAST:event_reviewBtnActionPerformed

    private void viewExamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewExamBtnActionPerformed
        int selectedRow = applicationTable.getSelectedRow();
        if(selectedRow>=0){
            ApplyRequest apply = (ApplyRequest) applicationTable.getValueAt(selectedRow, 0);
            TestInfoJFrame testInfoJFrame = new TestInfoJFrame(apply);
            testInfoJFrame.setLocationRelativeTo(null);
            testInfoJFrame.setVisible(true);
        }
        
    }//GEN-LAST:event_viewExamBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable applicationTable;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reviewBtn;
    private javax.swing.JButton viewExamBtn;
    // End of variables declaration//GEN-END:variables

    void setReviewBtn(boolean b) {
        reviewBtn.setEnabled(false);
    }
}
