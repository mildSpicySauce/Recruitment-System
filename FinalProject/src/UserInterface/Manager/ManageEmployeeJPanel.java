/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.Manager;

import Business.Account.Account;
import Business.Account.EmployeeAccount;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Role.Role;
import Business.Role.RoleType;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author 11638
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private EcoSystem system;
    private EmployeeAccount account;
    private Enterprise en;
    private Employee employee;
    
    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(EcoSystem system, EmployeeAccount account, Enterprise en) {
        initComponents();
        this.system = system;
        this.account = account;
        this.employee = account.getEmployee();
        this.en = en;
        
        populateHRTable();
    }

    ManageEmployeeJPanel(EcoSystem system, EmployeeAccount account, Enterprise en, Role role) {
        initComponents();
        this.system = system;
        this.account = account;
        this.employee = account.getEmployee();
        this.en = en;
        if(role.getRoleType().equals(RoleType.Manager)){
            populateHRTable();
            populateManagerTable();
            
            alterManagerBtn.setVisible(false);
            deleteManagerBtn.setVisible(false);
            addManagerBtn.setVisible(false);
        }
        if(role.getRoleType().equals(RoleType.SystemManager)){
            alterManagerBtn.setVisible(true);
            deleteManagerBtn.setVisible(true);
            addManagerBtn.setVisible(true);
            populateHRTable();
            populateManagerTable();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteHRBtn = new javax.swing.JButton();
        addHRBtn = new javax.swing.JButton();
        alterHRBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        HRTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        ManagerTable = new javax.swing.JTable();
        alterManagerBtn = new javax.swing.JButton();
        addManagerBtn = new javax.swing.JButton();
        deleteManagerBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        deleteHRBtn.setText("Delete HR");
        deleteHRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHRBtnActionPerformed(evt);
            }
        });

        addHRBtn.setText("Add HR");
        addHRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHRBtnActionPerformed(evt);
            }
        });

        alterHRBtn.setText("Alter HR");
        alterHRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterHRBtnActionPerformed(evt);
            }
        });

        HRTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "HR Name", "Phone", "Email"
            }
        ));
        jScrollPane3.setViewportView(HRTable);

        ManagerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Manager Name", "Phone", "Email"
            }
        ));
        jScrollPane4.setViewportView(ManagerTable);

        alterManagerBtn.setText("Alter Manager");
        alterManagerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterManagerBtnActionPerformed(evt);
            }
        });

        addManagerBtn.setText("Add Manager");
        addManagerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addManagerBtnActionPerformed(evt);
            }
        });

        deleteManagerBtn.setText("Delete Manager");
        deleteManagerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteManagerBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setText("HR List");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("Manager List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(alterManagerBtn)
                            .addGap(18, 18, 18)
                            .addComponent(addManagerBtn)
                            .addGap(18, 18, 18)
                            .addComponent(deleteManagerBtn))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(alterHRBtn)
                            .addGap(32, 32, 32)
                            .addComponent(addHRBtn)
                            .addGap(18, 18, 18)
                            .addComponent(deleteHRBtn)))
                    .addComponent(jLabel2))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteHRBtn)
                    .addComponent(addHRBtn)
                    .addComponent(alterHRBtn))
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteManagerBtn)
                    .addComponent(addManagerBtn)
                    .addComponent(alterManagerBtn))
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteHRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHRBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = HRTable.getSelectedRow();
        TableModel model = HRTable.getModel();
        if (selectedRow >= 0) {
            EmployeeAccount hr = (EmployeeAccount) model.getValueAt(selectedRow, 1);
            en.getAccountDir().removeAccount(hr);
            populateHRTable();
            DB4OUtil.getInstance().storeSystem(system);
        } else {
            JOptionPane.showMessageDialog(null, "Please choose the HR");
            return;
        }
    }//GEN-LAST:event_deleteHRBtnActionPerformed

    private void addHRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHRBtnActionPerformed
        // TODO add your handling code here:
        
        AddHRJFrame frame = new AddHRJFrame(system, en, this);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        DB4OUtil.getInstance().storeSystem(system);
        populateHRTable();
    }//GEN-LAST:event_addHRBtnActionPerformed

    public void populateHRTable() {
        DefaultTableModel dtm = (DefaultTableModel) HRTable.getModel();
        dtm.setRowCount(0);

        for (Account account : en.getAccountDir().getAccountList()) {
            if (account.getRole().getRoleType().equals(RoleType.HR)) {
               EmployeeAccount ac = (EmployeeAccount) account;
               
                Object[] row = new Object[4];
                row[0] = ac.getEmployee().getId();
                row[1] = ac;
                row[2] = ac.getEmployee().getPhone();
                row[3] = ac.getEmployee().getEmail();
                dtm.addRow(row);
            }
        }
    }
    
    
    private void alterHRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterHRBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = HRTable.getSelectedRow();
        TableModel model = HRTable.getModel();

        if (selectedRow >= 0) {
            EmployeeAccount hr = (EmployeeAccount) model.getValueAt(selectedRow, 1);
            HRJFrame frame = new HRJFrame(system, en, hr, this);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
            DB4OUtil.getInstance().storeSystem(system);
        }
    }//GEN-LAST:event_alterHRBtnActionPerformed

    private void alterManagerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterManagerBtnActionPerformed
        int selectedRow = ManagerTable.getSelectedRow();
        TableModel model = ManagerTable.getModel();

        if (selectedRow >= 0) {
            EmployeeAccount manager = (EmployeeAccount) model.getValueAt(selectedRow, 1);
            ManagerJFrame frame = new ManagerJFrame(system, en, manager, this);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
            DB4OUtil.getInstance().storeSystem(system);
        }
    }//GEN-LAST:event_alterManagerBtnActionPerformed

    private void addManagerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addManagerBtnActionPerformed
        AddManagerJFrame frame = new AddManagerJFrame(system, en, this);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        DB4OUtil.getInstance().storeSystem(system);
        populateManagerTable();
    }//GEN-LAST:event_addManagerBtnActionPerformed

    private void deleteManagerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteManagerBtnActionPerformed
        int selectedRow = ManagerTable.getSelectedRow();
        TableModel model = ManagerTable.getModel();
        if (selectedRow >= 0) {
            EmployeeAccount manager = (EmployeeAccount) model.getValueAt(selectedRow, 1);
            en.getAccountDir().removeAccount(manager);
            populateManagerTable();
            DB4OUtil.getInstance().storeSystem(system);
        } else {
            JOptionPane.showMessageDialog(null, "Please choose the HR");
            return;
        }
    }//GEN-LAST:event_deleteManagerBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HRTable;
    private javax.swing.JTable ManagerTable;
    private javax.swing.JButton addHRBtn;
    private javax.swing.JButton addManagerBtn;
    private javax.swing.JButton alterHRBtn;
    private javax.swing.JButton alterManagerBtn;
    private javax.swing.JButton deleteHRBtn;
    private javax.swing.JButton deleteManagerBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables

    public void populateManagerTable() {
        DefaultTableModel dtm = (DefaultTableModel) ManagerTable.getModel();
        dtm.setRowCount(0);

        for (Account account : en.getAccountDir().getAccountList()) {
            if (account.getRole().getRoleType().equals(RoleType.Manager)) {
               EmployeeAccount ac = (EmployeeAccount) account;
               
                Object[] row = new Object[4];
                row[0] = ac.getEmployee().getId();
                row[1] = ac;
                row[2] = ac.getEmployee().getPhone();
                row[3] = ac.getEmployee().getEmail();
                dtm.addRow(row);
            }
        }
    }
}
